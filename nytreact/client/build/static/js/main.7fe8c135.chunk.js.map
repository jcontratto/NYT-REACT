{"version":3,"sources":["components/Jumbotron/Jumbotron.js","utils/API.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Form/Input.js","components/Form/FormButton.js","pages/Home/Home.js","pages/Detail/Detail.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","paddingTop","textAlign","className","API","searchArticles","searchObj","axios","get","params","q","start_date","end_date","Col","size","split","map","join","Container","fluid","concat","Row","Input","props","Object","assign","FormButton","float","marginBottom","Home","state","articles","title","startdate","enddate","handleInputChange","event","_event$target","target","name","value","_this","setState","defineProperty","handleFormSubmit","preventDefault","then","res","data","catch","err","console","log","Container_Container","Row_Row","Col_Col","components_Jumbotron_Jumbotron","Input_Input","this","onChange","placeholder","FormButton_FormButton","disabled","onClick","toString","Component","Detail","_this2","getArticles","match","id","articels","Nav","href","App","BrowserRouter","components_Nav_Nav","Switch","Route","exact","path","component","NoMatch","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fe8c135.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Jumbotron = ({ children }) => (\r\n    <div\r\n    style={{ height: 300, paddingTop: 120, textAlign: \"center\" }}\r\nclassName=\"jumbortron\">\r\n{children}\r\n</div>\r\n);\r\n\r\nexport default Jumbotron;\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    searchArticles: function(searchObj) {\r\n        return axios.get(\"/nytarticles\", {\r\n            params: {\r\n                \"q\": searchObj.q,\r\n                \"start_date\": searchObj.start_date,\r\n                \"end_date\": searchObj.end_date\r\n            }\r\n        })\r\n    } \r\n}\r\n","import React from \"react\";\r\n\r\nexport const Col = ({ size, children }) => (\r\n  <div className={size.split(\" \").map(size => \"col-\" + size).join(\" \")}>\r\n    {children}\r\n  </div>\r\n);","import React from \"react\";\r\n\r\nexport const Container = ({ fluid, children }) => (\r\n  <div className={`container${fluid ? \"-fluid\" : \"\"}`}>\r\n    {children}\r\n  </div>\r\n);","import React from \"react\";\r\n\r\nexport const Row = ({ fluid, children }) => (\r\n  <div className={`row${fluid ? \"-fluid\" : \"\"}`}>\r\n    {children}\r\n  </div>\r\n);","import React from \"react\";\r\n\r\nexport const Input = props => (\r\n    <div className=\"form-group\">\r\n    <input className=\"form-control\" {...props} />\r\n    </div>\r\n);","import React from \"react\";\r\n\r\nexport const FormButton = props => (\r\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n    {props.children}\r\n    </button>\r\n);","import React, { Component } from \"react\";\r\nimport Delete from \"../../components/Delete\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\nimport API from \"../../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { List, ListItem } from \"../../components/List\";\r\nimport { Input, TextArea, FormButton } from \"../../components/Form\";\r\n\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    articles: [],\r\n    title: \"\",\r\n    startdate: \"\",\r\n    enddate: \"\"\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //     this.loadArticles();\r\n  // }\r\n\r\n  // loadArticles = () => {\r\n  //     API.getArticles()\r\n  //         .then(res =>\r\n  //             this.setState({ articles: res.data, title: \"\", startdate: \"\", enddate: \"\" })\r\n  //         )\r\n  //         .cath(err => console.log(err));\r\n  // };\r\n\r\n  // deleteArticles = id => {\r\n  //     API.deleteArticles(id)\r\n  //       .then(res => this.loadArticles())\r\n  //       .catch(err => console.log(err));\r\n  //   };\r\n\r\n    handleInputChange = event => {\r\n      const { name, value } = event.target;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n      event.preventDefault();\r\n      if (this.state.title && this.state.startdate && this.state.enddate) {\r\n        API.searchArticles({\r\n          q: this.state.title,\r\n          start_date: this.state.startdate,\r\n          end_date: this.state.enddate\r\n        })\r\n          .then(res => {\r\n            this.setState(\r\n              {articles: res.data}\r\n            )\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n    };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1>New York Times Article Search</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                value={this.state.title}\r\n                onChange={this.handleInputChange}\r\n                name=\"title\"\r\n                placeholder=\"Title (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.startdate}\r\n                onChange={this.handleInputChange}\r\n                name=\"startdate\"\r\n                placeholder=\"Start Date (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.enddate}\r\n                onChange={this.handleInputChange}\r\n                name=\"enddate\"\r\n                placeholder=\"End Date (required)\"\r\n              />\r\n              <FormButton\r\n                disabled={!(this.state.startdate && this.state.title)}\r\n                onClick={this.handleFormSubmit}\r\n              >\r\n                Submit\r\n                  </FormButton>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n        <div>\r\n        {this.state.articles.toString()}\r\n        </div>\r\n      </Container>\r\n     );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\nimport API from \"../../utils/API\";\r\n\r\nclass Detail extends Component {\r\n  state = {\r\n    articles: {}\r\n  };\r\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\r\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\r\n  componentDidMount() {\r\n    API.getArticles(this.props.match.params.id)\r\n      .then(res => this.setState({ articles: res.data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1>\r\n                {this.state.articles.title} by {this.state.articels.startdate} {this.state.articles.enddate}\r\n              </h1>\r\n            </Jumbotron>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\n\r\nconst Nav = () => (\r\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a className=\"navbar-brand\" href=\"/\">\r\n      New York Times Articles\r\n    </a>\r\n  </nav>\r\n);\r\n\r\nexport default Nav;","// \nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\n\nconst App = () => (\n  <Router>\n    <div>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/Articles\" component={Home} />\n        <Route exact path=\"/Articles/:id\" component={Detail} />\n        <Route component={NoMatch} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}