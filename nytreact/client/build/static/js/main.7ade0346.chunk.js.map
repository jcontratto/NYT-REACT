{"version":3,"sources":["components/Jumbotron/Jumbotron.js","utils/API.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Form/Input.js","components/Form/FormButton.js","pages/Home/Home.js","pages/Detail/Detail.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","paddingTop","textAlign","className","API","searchArticles","searchObj","axios","get","params","q","start_date","end_date","saveArticle","article","post","getArticles","deleteArticles","id","delete","Col","size","split","map","join","Container","fluid","concat","Row","Input","props","Object","assign","FormButton","float","marginBottom","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadSavedArticles","then","res","setState","savedArticles","data","catch","err","console","log","handleInputChange","event","_event$target","target","name","value","defineProperty","handleFormSubmit","preventDefault","state","title","startdate","enddate","articles","articleData","checkForSaved","indexOf","item","_this2","Container_Container","Row_Row","Col_Col","components_Jumbotron_Jumbotron","Input_Input","onChange","placeholder","FormButton_FormButton","disabled","onClick","key","summary","date","href","url","_id","Component","Detail","match","articels","Nav","App","BrowserRouter","components_Nav_Nav","Switch","Route","exact","path","component","NoMatch","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ade0346.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Jumbotron = ({ children }) => (\r\n    <div\r\n    style={{ height: 200, paddingTop: 120, textAlign: \"center\" }}\r\nclassName=\"jumbotron\"> \r\n\r\n{children}\r\n</div>\r\n);\r\n\r\nexport default Jumbotron;\r\n\r\n\r\n","import axios from \"axios\";\r\n//import router from \"../routes/article\";\r\n\r\nexport default {\r\n    searchArticles: function (searchObj) {\r\n\r\n        return axios.get(\"/nytarticles\", {\r\n            params: {\r\n                \"q\": searchObj.q,\r\n                \"start_date\": searchObj.start_date,\r\n                \"end_date\": searchObj.end_date\r\n            }\r\n        })\r\n    },\r\n\r\n    saveArticle: function (article) {\r\n        return axios.post(\"/articles\", article)\r\n    },\r\n\r\n    getArticles: function () {\r\n        return axios.get(\"/articles\")\r\n    },\r\n\r\n    deleteArticles: function(id) {\r\n        return axios.delete(\"/articles/\" + id)\r\n    }\r\n\r\n};\r\n\r\n","import React from \"react\";\r\n\r\nexport const Col = ({ size, children }) => (\r\n  <div className={size.split(\" \").map(size => \"col-\" + size).join(\" \")}>\r\n    {children}\r\n  </div>\r\n);","import React from \"react\";\r\n\r\nexport const Container = ({ fluid, children }) => (\r\n  <div className={`container${fluid ? \"-fluid\" : \"\"}`}>\r\n    {children}\r\n  </div>\r\n);","import React from \"react\";\r\n\r\nexport const Row = ({ fluid, children }) => (\r\n  <div className={`row${fluid ? \"-fluid\" : \"\"}`}>\r\n    {children}\r\n  </div>\r\n);","import React from \"react\";\r\n\r\nexport const Input = props => (\r\n    <div className=\"form-group\">\r\n    <input className=\"form-control\" {...props} />\r\n    </div>\r\n);","import React from \"react\";\r\n\r\nexport const FormButton = props => (\r\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n    {props.children}\r\n    </button>\r\n);","import React, { Component } from \"react\";\r\nimport Delete from \"../../components/Delete\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\nimport API from \"../../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { List, ListItem } from \"../../components/List\";\r\nimport { Input, TextArea, FormButton } from \"../../components/Form\";\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      articles: [],\r\n      item: {},\r\n      title: \"\",\r\n      startdate: \"\",\r\n      enddate: \"\",\r\n      savedArticles: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadSavedArticles();\r\n  }\r\n\r\n  loadSavedArticles = () => {\r\n    API.getArticles()\r\n      .then(res =>\r\n        this.setState({ savedArticles: res.data })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.title && this.state.startdate && this.state.enddate) {\r\n\r\n      API.searchArticles({\r\n        q: this.state.title,\r\n        start_date: this.state.startdate,\r\n        end_date: this.state.enddate\r\n      })\r\n        .then(res => {\r\n          this.setState({\r\n            articles: res.data\r\n          })\r\n\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  saveArticle = (articleData) => {\r\n    API.saveArticle(articleData).then(res => {\r\n      console.log(res.data)\r\n      this.loadSavedArticles()\r\n      //   savedArticles: this.state.savedArticles.concat([res.data])\r\n      // })\r\n    })\r\n  }\r\n\r\n  deleteArticles = id => {\r\n    API.deleteArticles(id)\r\n      .then(res => this.loadSavedArticles())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  checkForSaved = (article) => {\r\n    const articleIds = this.state.savedArticles.map((article) => {\r\n      return article.id\r\n    })\r\n    const isSaved = articleIds.indexOf(article.id) !== -1\r\n    return isSaved\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              {/* <h1>New York Times Article Search</h1> */}\r\n            </Jumbotron>\r\n            <form>\r\n              <h2>Search Article</h2>\r\n              <Input\r\n                value={this.state.title}\r\n                onChange={this.handleInputChange}\r\n                name=\"title\"\r\n                placeholder=\"Title (required)\"\r\n              />\r\n              <h2>Enter Start Date</h2>\r\n              <Input\r\n                value={this.state.startdate}\r\n                onChange={this.handleInputChange}\r\n                name=\"startdate\"\r\n                placeholder=\"YYYYMMDD (required)\"\r\n              />\r\n              <h2>Enter End Date</h2>\r\n              <Input\r\n                value={this.state.enddate}\r\n                onChange={this.handleInputChange}\r\n                name=\"enddate\"\r\n                placeholder=\"YYYYMMDD (required)\"\r\n              />\r\n              <FormButton\r\n                disabled={!(this.state.startdate && this.state.title)}\r\n                onClick={this.handleFormSubmit}\r\n              >\r\n                Submit\r\n                  </FormButton>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n        {this.state.articles.map((article) => {\r\n\r\n          return (\r\n            <div className=\"card\" key={article.id}>\r\n              <div className=\"card-header\">\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{article.title}</h5>\r\n                <p className=\"card-text\">{article.summary}</p>\r\n                <p className=\"card-date\">{article.date}</p>\r\n                <a target=\"_blank\" href={article.url} className=\"card-url\">{article.url}</a>\r\n                {!this.checkForSaved(article) && <div onClick={() => this.saveArticle(article) } className=\"btn btn-primary\">Save</div>}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {this.state.savedArticles.map((article) => {\r\n          return (\r\n            <div className=\"card\" key={article.id}>\r\n              <div className=\"card-header\">\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{article.title}</h5>\r\n                <p className=\"card-text\">{article.summary}</p>\r\n                <p className=\"card-date\">{article.date}</p>\r\n                <a target=\"_blank\" href={article.url} className=\"card-url\">{article.url}</a>\r\n                <div onClick={() => this.deleteArticles(article._id)} className=\"btn btn-danger\">Delete</div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\nimport API from \"../../utils/API\";\r\n\r\nclass Detail extends Component {\r\n  state = {\r\n    articles: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    API.getArticles(this.props.match.params.id)\r\n      .then(res => this.setState({ articles: res.data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1>\r\n                {this.state.articles.title} by {this.state.articels.startdate} {this.state.articles.enddate}\r\n              </h1>\r\n            </Jumbotron>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\n\r\nconst Nav = () => (\r\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a className=\"navbar-brand\" href=\"/\">\r\n      New York Times Articles\r\n    </a>\r\n  </nav>\r\n);\r\n\r\nexport default Nav;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport \"./App.js\";\n\nconst App = () => (\n  <Router>\n    <div>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/Articles\" component={Home} />\n        <Route exact path=\"/Articles/:id\" component={Detail} />\n        <Route component={NoMatch} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n//import $ from \"jquery\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}